 /*constructor(@InjectRepository(User)
  private usersRepository: Repository<User>,
  @InjectRepository(Attachment)
  private attachmentRepository: Repository<Attachment>) {
    this.seed().then();
  }


  async seed (){
    const user = await this.usersRepository.insert({
      name: "Jacopo"
    });

    await this.attachmentRepository.insert({
      user: user.generatedMaps[0],
      path: "vattelapesca",
      name: "CV",
      entity: "USER"
    })
  }

 

  async setUserProjectRole(){

    const id = 1;
    const id_user = 4;

    const user = await this.userRepository.findOne(id_user);
    const project = await this.projectRepository.findOne(id);
    const projectRole = await this.projectRoleRepository.findOne(id);

    await this.userPrRepository.insert({
      user: user,
      project: project,
      projectRole: projectRole
    })

  }*/
//   constructor(@InjectRepository(User)
//   private userRepository: Repository<User>,
//   @InjectRepository(Project)
//   private projectRepository: Repository<Project>,
//   @InjectRepository(ProjectRole)
//   private projectRoleRepository: Repository<ProjectRole>,
//   @InjectRepository(UserProjectRole)
//   private userPrRepository: Repository<UserProjectRole>) {
//     //this.setUserProjectRole().then();
    //this.test().then()
  }

  // async test() {
  //   const result = await this.userRepository.find({
  //     relations: ['projects', 'userProjectRole' ,'userProjectRole.user', 'userProjectRole.project' , 'projects.users']
  //   })


  //   console.log(JSON.stringify(result));
  // }
